openapi: 3.0.0
info:
  title: Puntospoint API
  version: 1.0.0
  contact:
    name: César Parra
    email: cesar.parra@puntospoint.com
    url: 'https://www.puntospoint.com'
  license:
    name: Apache-2.0
    url: 'https://opensource.org/licenses/Apache-2.0'
  x-logo:
    url: puntospoint_logo.svg
    backgroundColor: "transparent"
    altText: "Puntospoint"
  description: |
    Bienvenido a la documentación oficial de los servicios de Puntospoint (API Rest).
servers:
  - url: https://api.puntospoint.com
    description: API para ambiente de producción
  - url: https://api-qa.puntospoint.com
    description: API para ambiente de pruebas
paths:
  /element/clients/events/available:
    get:
      tags:
        - products
      summary: Listado de productos activos
      description: Listado de experiencias elegidas para el catálogo
      operationId: getActiveEvents
      deprecated: false
      security:
        - JWT: []
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actived_events_response'
            application/xml:
              schema:
                $ref: '#/components/schemas/actived_events_response'
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                  <products>
                    <product>
                      <id-0>string</id-0>
                      <state>string</state>
                      <sku>string</sku>
                      <starting-at>string</starting-at>
                      <ending-at>string</ending-at>
                      <validity-starting-at>string</validity-starting-at>
                      <validity-ending-at>string</validity-ending-at>
                      <clients-confirm-message>string</clients-confirm-message>
                      <stock>
                        <available-stock>number</available-stock>
                        <swaps>number</swaps>
                        <purchases-count>number</purchases-count>
                      </stock>
                      <eco>
                        <fancy-name>string</fancy-name>
                      </eco>
                      <experience>
                        <name>string</name>
                        <image-url>string</image-url>
                      </experience>
                    </product>
                  </products>
                
  /element/clients/events/available/exchanges:
    get:
      tags:
        - products
      summary: Opciones de compras activas
      description: Listado de todas las opciones de compra disponibles para los productos activos
      operationId: getActiveExchangesEvents
      deprecated: false
      security:
        - JWT: []
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actived_exchanges_response'
            application/xml:
              schema:
                $ref: '#/components/schemas/actived_exchanges_response'
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                  <products>
                    <product>
                      <id>string</id>
                      <sku>string</sku>
                      <exchanges>
                        <exchange>
                          <id>string</id>
                          <points>number</points>
                          <cash>number</cash>
                          <discount-activated>boolean</discount-activated>
                          <discounted-points>number</discounted-points>
                        </exchange>
                      </exchanges>
                    </product>
                  </products>
                
  /element/clients/events/available/stocks:
    get:
      tags:
        - products
      summary: Stocks de productos activos
      description: Listado de todas las opciones de compra disponibles para los productos activos
      operationId: getActiveStocksEvents
      deprecated: false
      security:
        - JWT: []
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actived_stocks_response'
            application/xml:
              schema:
                $ref: '#/components/schemas/actived_stocks_response'
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                  <products>
                    <product>
                      <id>string</id>
                      <sku>string</sku>
                      <stock>
                        <available-stock>number</available-stock>
                        <swaps>number</swaps>
                        <purchases-count>number</purchases-count>
                      </stock>
                    </product>
                  </products>
                

  /element/login:
    post:
      tags:
        - authentication
      summary: Login
      description: Endpoint para obtener token para la autorización de requests (JWT).
      operationId: login
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: base64
          description: Basic Auth. Codificación en base64 de la siguiente concatenación {username}:{password}
          required: true
          example: "Basic dXN1YXJpbzoxMjM0"
        - in: header
          name: 'Content-Type'
          schema:
            type: string
            enum: [application/json]
          required: true
        - in: header
          name: 'Accept'
          schema:
            type: string
            enum: [application/json]
          required: true
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  token_type:
                    type: string
                    description: Tipo de token (Bearer)
                  access_token:
                    type: string
                    description: Token de acceso para realizar solicitudes posteriores
                  expires_in:
                    type: integer
                    description: Tiempo de expiración del token en segundos
              example:
                token_type: "Bearer"
                access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJwcnVlYmEiLCJpYXQiOjE1MTYyMzkwMjJ9.NBd9pvgsp5kBEC26-4vu-kYSyvlaN4YTQDtytwvioII"
                expires_in: 3600
        401:
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              example:
                status: "Unauthorized"
  /element/clients/vouchers/carts:
    post:
      tags:
        - vouchers_cart
      summary: Crear carro de compra con vouchers
      description: Para crear vouchers de un carrito se debe ejecutar este endpoint.
      operationId: vouchersCartCreate
      responses:
        201:
          description: Carro creado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart_detail_response'
            application/xml:
              schema:
                $ref: '#/components/schemas/cart_detail_response'
              example: |
                <?xml version="1.0" encoding="UTF-8">
                  <cart>
                    <rut>string</rut>
                    <email>string</email>
                    <created-at>string</created-at>
                    <id-0>string</id-0>
                    <paid-at>string</paid-at>
                    <state>string</state>
                    <cart-exchanges>
                      <cart-exchange>
                        <created-at>string</created-at>
                        <amount>number</amount>
                        <id-0>string</id-0>
                        <exchange>
                          <cash>number</cash>
                          <points>number</points>
                          <discount-activated>boolean</discount-activated>
                          <discounted-points>number</discounted-points>
                          <id-0>c81e728d9d4c2f636f067f89cc14862c</id-0>
                          <product>
                            <id-0>string</id-0>
                            <state>string</state>
                            <sku>string</sku>
                            <starting-at>string</starting-at>
                            <ending-at>string</ending-at>
                            <validity-starting-at>string</validity-starting-at>
                            <validity-ending-at>string</validity-ending-at>
                            <clients-confirm-message>string</clients-confirm-message>
                            <stock>
                              <available-stock>number</available-stock>
                              <swaps>number</swaps>
                              <purchases-count>number</purchases-count>
                            </stock>
                            <eco>
                              <fancy-name>string</fancy-name>
                            </eco>
                            <experience>
                              <name>string</name>
                              <image-url>string</image-url>
                            </experience>
                          </product>
                        </exchange>
                      </cart-exchange>
                    </cart-exchanges>
                    <vouchers/>
                  </cart>
                
      deprecated: false
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cart_creation_request'
          application/xml:
            schema:
              $ref: '#/components/schemas/cart_creation_request'
            example: |
              <?xml version="1.0"?>
              <cart-exchanges-attributes type="array">
                <cart-exchanges-attribute>
                  <exchange-id-0>string</exchange-id-0>
                  <amount>number</amount>
                </cart-exchanges-attribute>
              </cart-exchanges-attributes>

    summary: ''
  /element/clients/vouchers/carts/{id}:
    get:
      tags:
        - vouchers_cart
      summary: Obtiene información de un carro.
      operationId: vouchersCartById
      parameters:
        - name: id
          in: path
          description: Cart Id
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart_detail_response'
            application/xml:
              schema:
                $ref: '#/components/schemas/cart_detail_response'
              example: |
                <?xml version="1.0" encoding="UTF-8">
                  <cart>
                    <rut>string</rut>
                    <email>string</email>
                    <created-at>string</created-at>
                    <id-0>string</id-0>
                    <paid-at>string</paid-at>
                    <state>string</state>
                    <cart-exchanges>
                      <cart-exchange>
                        <created-at>string</created-at>
                        <amount>number</amount>
                        <id-0>string</id-0>
                        <exchange>
                          <cash>number</cash>
                          <points>number</points>
                          <discount-activated>boolean</discount-activated>
                          <discounted-points>number</discounted-points>
                          <id-0>c81e728d9d4c2f636f067f89cc14862c</id-0>
                          <product>
                            <id-0>string</id-0>
                            <state>string</state>
                            <sku>string</sku>
                            <starting-at>string</starting-at>
                            <ending-at>string</ending-at>
                            <validity-starting-at>string</validity-starting-at>
                            <validity-ending-at>string</validity-ending-at>
                            <clients-confirm-message>string</clients-confirm-message>
                            <stock>
                              <available-stock>number</available-stock>
                              <swaps>number</swaps>
                              <purchases-count>number</purchases-count>
                            </stock>
                            <eco>
                              <fancy-name>string</fancy-name>
                            </eco>
                            <experience>
                              <name>string</name>
                              <image-url>string</image-url>
                            </experience>
                          </product>
                        </exchange>
                      </cart-exchange>
                    </cart-exchanges>
                    <vouchers/>
                  </cart>
                
        404:
          description: Carro no encontrado
      deprecated: false
      security:
        - JWT: []
      requestBody:
        required: false
  /element/clients/vouchers/carts/{id}/checkout:
    post:
      tags:
        - vouchers_cart
      summary: Reserva de stock de los vouchers del carro.
      description: Cuando cliente inicie checkout se deben realizar la request a este endopoint para reservar el stock de los vouchers a comprar.
      operationId: vouchersCartCheckoutById
      parameters:
        - name: id
          in: path
          description: Cart Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Carro reservado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart_detail_response'
            application/xml:
              schema:
                $ref: '#/components/schemas/cart_detail_response'
              example: |
                <?xml version="1.0" encoding="UTF-8">
                  <cart>
                    <rut>string</rut>
                    <email>string</email>
                    <created-at>string</created-at>
                    <id-0>string</id-0>
                    <paid-at>string</paid-at>
                    <state>string</state>
                    <cart-exchanges>
                      <cart-exchange>
                        <created-at>string</created-at>
                        <amount>number</amount>
                        <id-0>string</id-0>
                        <exchange>
                          <cash>number</cash>
                          <points>number</points>
                          <discount-activated>boolean</discount-activated>
                          <discounted-points>number</discounted-points>
                          <id-0>c81e728d9d4c2f636f067f89cc14862c</id-0>
                          <product>
                            <id-0>string</id-0>
                            <state>string</state>
                            <sku>string</sku>
                            <starting-at>string</starting-at>
                            <ending-at>string</ending-at>
                            <validity-starting-at>string</validity-starting-at>
                            <validity-ending-at>string</validity-ending-at>
                            <clients-confirm-message>string</clients-confirm-message>
                            <stock>
                              <available-stock>number</available-stock>
                              <swaps>number</swaps>
                              <purchases-count>number</purchases-count>
                            </stock>
                            <eco>
                              <fancy-name>string</fancy-name>
                            </eco>
                            <experience>
                              <name>string</name>
                              <image-url>string</image-url>
                            </experience>
                          </product>
                        </exchange>
                      </cart-exchange>
                    </cart-exchanges>
                    <vouchers/>
                  </cart>
                
        404:
          description: Carro no encontrado
        412:
          description: Carro no disponible para checkout (estado no "created")

      deprecated: false
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cart_checkout_request'
          application/xml:
            schema:
              $ref: '#/components/schemas/cart_checkout_request'
            example: |
              <?xml version="1.0"?>
              <checkout>
                <rut>string</rut>
                <email>string</email>
              </checkout>
  /element/clients/vouchers/carts/{id}/confirm:
    post:
      tags:
        - vouchers_cart
      summary: Confirma el pago de un carro de compras
      description: Una vez reservado (checkout) el carro de compra, si se cofirma el pago realizando la ejecución de este endpoint, entonces el carro se marca como pagado y se realizan los envíos de los vouchers al cliente.
      operationId: vouchersCartConfirmById
      parameters:
        - name: id
          in: path
          description: Cart Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Carro confirmado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart_detail_response'
            application/xml:
              schema:
                $ref: '#/components/schemas/cart_detail_response'
              example: |
                <?xml version="1.0" encoding="UTF-8">
                  <cart>
                    <rut>string</rut>
                    <email>string</email>
                    <created-at>string</created-at>
                    <id-0>string</id-0>
                    <paid-at>string</paid-at>
                    <state>string</state>
                    <cart-exchanges>
                      <cart-exchange>
                        <created-at>string</created-at>
                        <amount>number</amount>
                        <id-0>string</id-0>
                        <exchange>
                          <cash>number</cash>
                          <points>number</points>
                          <discount-activated>boolean</discount-activated>
                          <discounted-points>number</discounted-points>
                          <id-0>c81e728d9d4c2f636f067f89cc14862c</id-0>
                          <product>
                            <id-0>string</id-0>
                            <state>string</state>
                            <sku>string</sku>
                            <starting-at>string</starting-at>
                            <ending-at>string</ending-at>
                            <validity-starting-at>string</validity-starting-at>
                            <validity-ending-at>string</validity-ending-at>
                            <clients-confirm-message>string</clients-confirm-message>
                            <stock>
                              <available-stock>number</available-stock>
                              <swaps>number</swaps>
                              <purchases-count>number</purchases-count>
                            </stock>
                            <eco>
                              <fancy-name>string</fancy-name>
                            </eco>
                            <experience>
                              <name>string</name>
                              <image-url>string</image-url>
                            </experience>
                          </product>
                        </exchange>
                      </cart-exchange>
                    </cart-exchanges>
                    <vouchers/>
                  </cart>
                
        404:
          description: Carro no encontrado
        412:
          description: Carro no disponible para confirmar (estado no "reserved")

      deprecated: false
      security:
        - JWT: []
      requestBody:
        required: false
    summary: ''
  /element/clients/vouchers/carts/{id}/void:
    post:
      tags:
        - vouchers_cart
      summary: Anula la creación de carro y los vouchers asociados.
      description: Una vez reservado (checkout) el carro de compra, si no se cofirma el pago, entonces puedes liberar el stock reservado del carro. Esta acción es irreversible.
      operationId: vouchersCartVoidId
      parameters:
        - name: id
          in: path
          description: Cart Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Carro confirmado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart_detail_response'
            application/xml:
              schema:
                $ref: '#/components/schemas/cart_detail_response'
              example: |
                <?xml version="1.0" encoding="UTF-8">
                  <cart>
                    <rut>string</rut>
                    <email>string</email>
                    <created-at>string</created-at>
                    <id-0>string</id-0>
                    <paid-at>string</paid-at>
                    <state>string</state>
                    <cart-exchanges>
                      <cart-exchange>
                        <created-at>string</created-at>
                        <amount>number</amount>
                        <id-0>string</id-0>
                        <exchange>
                          <cash>number</cash>
                          <points>number</points>
                          <discount-activated>boolean</discount-activated>
                          <discounted-points>number</discounted-points>
                          <id-0>c81e728d9d4c2f636f067f89cc14862c</id-0>
                          <product>
                            <id-0>string</id-0>
                            <state>string</state>
                            <sku>string</sku>
                            <starting-at>string</starting-at>
                            <ending-at>string</ending-at>
                            <validity-starting-at>string</validity-starting-at>
                            <validity-ending-at>string</validity-ending-at>
                            <clients-confirm-message>string</clients-confirm-message>
                            <stock>
                              <available-stock>number</available-stock>
                              <swaps>number</swaps>
                              <purchases-count>number</purchases-count>
                            </stock>
                            <eco>
                              <fancy-name>string</fancy-name>
                            </eco>
                            <experience>
                              <name>string</name>
                              <image-url>string</image-url>
                            </experience>
                          </product>
                        </exchange>
                      </cart-exchange>
                    </cart-exchanges>
                    <vouchers/>
                  </cart>
                
        404:
          description: Carro no encontrado
        412:
          description: Carro no disponible para confirmar (estado no "reserved")

      deprecated: false
      security:
        - JWT: []
      requestBody:
        required: false
    summary: ''

  /element/loyalty_club/clients/{client_document_type}/{client_document_number}/gain:
    get:
      tags:
        - clients
      summary: Obtiene información de acumulación del cliente.
      description: Obtiene información de acumulación de puntos y progreso de desafíos del cliente.
      operationId: clientsGain
      parameters:
        - in: header
          name: 'Content-Type'
          schema:
            type: string
            enum: [application/json]
          required: true
        - in: header
          name: 'Accept'
          schema:
            type: string
            enum: [application/json]
          required: true
        - in: header
          name: 'Authorization'
          schema:
            type: string
            example: 'Bearer <login token>'
          required: true
        - in: header
          name: 'If-None-Match'
          schema:
            type: string
            example: '"33bc8d8ee566e48204012ab66364df08"'
        - in: header
          name: 'If-Modified-Since'
          schema:
            type: string
            example: '"Sat, 01 Jan 2023 00:00:00 GMT"'
        - name: client_document_type
          in: path
          example: RUT
          schema:
            type: string
          description: >
            Tipo de documento:
             * `RUT` - Para compras en Chile.
             * `CC` - Para compras en Colombia.
             * `CE` - Para compras en Colombia y Perú.
             * `DNI` - Para compras en Perú.
          required: true
        - name: client_document_number
          in: path
          description: Número de documento del cliente, sin puntos ni guiones.
          required: true
          example: "145221331"
          schema:
            type: string
        - name: closure_month
          in: query
          description: Mes y año de acumulacion (YYYY-MM)
          required: false
          example: "2023-01"
          schema:
            type: date
            format: 'YYYY-MM'
      responses:
        200:
          description: Información de acumulación del cliente
          headers:
            ETag:
              description: Etiqueta de entidad
              schema:
                type: string
              example: '33bc8d8ee566e48204012ab66364df08'
            Last-Modified:
              description: Última fecha de modificación
              schema:
                type: string
              example: 'Sat, 01 Jan 2023 00:00:00 GMT'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_gain'
              examples:
                completed:
                  summary: Cliente con desafío completado
                  value:
                    client_document_type: RUT
                    client_document_number: '145221331'
                    points: 1000,
                    current_date: '2023-01-30'
                    billing_day: 20
                    billing_started_at: '2024-01-21'
                    billing_ended_at: '2024-02-20'
                    closure_started_at: '2024-01-17'
                    closure_ended_at: '2024-02-16'
                    total_points_purchases: 1500
                    overdue_days: 0
                    challenges:
                      - id: 1
                        type: daily_purchase
                        name: Mantención costo 0
                        description: Desafío para mantención sin costos
                        goal: 2
                        completed_at: "2024-01-31T15:45:00Z"
                        progress: 2
                        conditions:
                          - attribute: "TIPO_TARJETA"
                            operator: "=="
                            value: "ABIERTA"
                    purchases:
                      - id: 1
                        business_category: "Electrónicos"
                        commerce: "ElectroStore"
                        points: 50
                        purchase_datetime: "2024-01-30T12:30:00Z"
                        total_purchase_price: 1000
                      - id: 2
                        business_category: "Ropa"
                        commerce: "FashionMall"
                        points: 30
                        purchase_datetime: "2024-01-31T15:45:00Z"
                        total_purchase_price: 500
                in_progress:
                  summary: Cliente con desafío en progreso
                  value:
                    client_document_type: RUT
                    client_document_number: '145221331'
                    points: 750
                    current_date: '2023-01-30'
                    billing_day: 20
                    billing_started_at: '2024-01-21'
                    billing_ended_at: '2024-02-20'
                    closure_started_at: '2024-01-17'
                    closure_ended_at: '2024-02-16'
                    overdue_days: 0
                    total_points_purchases: 1500
                    challenges:
                      - id: 1
                        type: daily_purchase
                        name: Mantención costo 0
                        description: Desafío para mantención sin costos
                        goal: 20
                        completed_at: null
                        progress: 2
                        conditions:
                          - attribute: "TIPO_TARJETA"
                            operator: "=="
                            value: "ABIERTA"
                    purchases:
                      - id: 1
                        business_category: "Electrónicos"
                        commerce: "ElectroStore"
                        points: 50
                        purchase_datetime: "2024-01-30T12:30:00Z"
                        total_purchase_price: 1000
                      - id: 2
                        business_category: "Ropa"
                        commerce: "FashionMall"
                        points: 30
                        purchase_datetime: "2024-01-31T15:45:00Z"
                        total_purchase_price: 500

        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              example:
                status: "Not Acceptable"
        404:
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              example:
                status: "Not Found"
        403:
          description: Acceso denegado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              example:
                status: "Forbidden"
        400:
          description: Solicitud incorrecta
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
              example:
                errors:
                  closure_month: "Mes de cierre debe tener el formato YYYY-MM"
      deprecated: false
      security:
        - JWT: []
      requestBody:
        required: false
    summary: ''
  /element/data_driven/commerce_purchases:
    post:
      tags:
        - commerce_purchases
      summary: Crear registro de compra de un comercio
      description: Registra una compra presencial/online en un comercio, con sus items.
      operationId: commercePurchaseCreate
      responses:
        201:
          description: Registro de compra creada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commerce_purchase_response'
            application/xml:
              schema:
                $ref: '#/components/schemas/commerce_purchase_response'
        422:
          description: Registro de compra no pudo ser procesado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "unprocessable_entity"
                  errors:
                    type: object
                    description: Listado de errores por atributo
                    example:
                      { "purchase_id": ["es demasiado largo (30 caracteres máximo)"],
                        "purchase_mode": ["no está incluido en la lista"],
                        "client_document_type": ["es demasiado largo (30 caracteres máximo)"],
                        "client_document_number": ["es demasiado largo (18 caracteres máximo)"],
                        "coupon_code": ["es demasiado largo (255 caracteres máximo)"],
                        "store_id": ["es demasiado largo (30 caracteres máximo)"],
                        "store_name": ["es demasiado largo (255 caracteres máximo)"],
                        "purchase_document_type": ["es demasiado largo (30 caracteres máximo)"],
                        "purchase_document_number": ["es demasiado largo (255 caracteres máximo)"],
                        "cashier_document_type": ["es demasiado largo (30 caracteres máximo)"],
                        "cashier_document_number": ["es demasiado largo (18 caracteres máximo)"],
                        "cashier_name": ["es demasiado largo (100 caracteres máximo)"],
                        "items[0].product_name": ["es demasiado largo (100 caracteres máximo)"],
                        "items[0].category_name": ["es demasiado largo (100 caracteres máximo)"],
                        "items[0].product_sku": ["es demasiado largo (255 caracteres máximo)"]
                      }

      deprecated: false
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commerce_purchase_request'
  summary: ''
components:
  links: {}
  callbacks: {}
  examples:
  schemas:
    events_exchanges:
      type: array
      description: Listado de opciones de compras disponibles
      items:
        type: object
        properties:
          id_0:
            type: string
            description: Id de opción de compra
          cash:
            type: number
            description: Monto en dinero requerido para comprar un voucher
          points:
            type: number
            description: Puntos requeridos para canjear un voucher
          discount_activated:
            type: boolean
            description: Si está o no activado el descuento (solo puntos)
          discounted_points:
            type: number
            description: Puntos en descuento

    cart_detail_response:
      type: object
      properties:
        id_0:
          type: string
          description: Id de carro de compra
        rut:
          type: string
          description: Rut de cliente asociado al carrito de compra
        email:
          type: string
          description: Email del cliente
          format: email
        state:
          type: string
          enum:
            - created
            - expired
            - reserved
            - paid
            - voided
          descripción: Estado del carro de compras
        created_at:
          type: string
          description: Fecha y hora de creación del carro de compra
          format: iso8601
        paid_at:
          type: string
          description: Fecha y hora de pago carro de compra
          format: iso8601
        cart_exchanges:
          type: array
          descriptions: Listado de items del carro de compra
          items:
            type: object
            properties:
              created_at:
                type: string
                description: Fecha y hora de creación del carro de compra
                format: iso8601
              amount:
                type: number
                description: Cantidad de vouchers del item
              exchange:
                type: object
                description: Opción de pago
                properties:
                  id_0:
                    type: string
                    description: Id de opción de compra
                  cash:
                    type: number
                    description: Monto en dinero requerido para comprar un voucher
                  points:
                    type: number
                    description: Puntos requeridos para canjear un voucher
                  discount_activated:
                    type: boolean
                    description: Si está o no activado el descuento (solo puntos)
                  discounted_points:
                    type: number
                    description: Puntos en descuento
                  product:
                    type: object
                    description: Producto asociado a la opción de pago.
                    properties:
                      id_0:
                        type: string
                        description: Id del producto
                      state:
                        type: string
                        description: Estado del producto
                        enum:
                          - published
                          - taken
                      client_confirm_message:
                        type: string
                        description: Mensaje que debe aceptar el cliente antes de realizar la compra.
                        format: html
                      provider:
                        type: object
                        description: Información respecto al proveedor de la experiencia
                        properties:
                          fancy_name:
                            type: string
                            description: Nombre comercial del proveedor
                      name:
                        type: string
                        description:  Nombre del producto
                      sku:
                        type: string
                        description: SKU del producto
                      images:
                        type: array
                        description: Listado de urls de imagenes adicionales e imagen principal del producto
                      description:
                        type: object
                        description: Información respecto al producto
                        properties:
                          details:
                            type: string
                            description: Detalles o descripción de la experiencia
                            format: html
                          addresses:
                            type: string
                            description: Direcciones de donde se puede hacer uso el voucher
                            format: html
                          instructions:
                            type: string
                            description: Instrucciones de uso del voucher
                            format: html
                          conditions:
                            type: string
                            description: Condiciones de la experiencia
                            format: html
                      exchanges:
                        $ref: '#/components/schemas/events_exchanges'
                      validation_availability:
                        type: object
                        description: Fechas en las cuales se puede hacer uso de los vouchers en el comercio
                        properties:
                          validity_starting_at:
                            type: string
                            description: Fecha desde la cual se puede hacer uso de los vouchers en el comercio
                          validity_ending_at:
                            type: string
                            description: Fecha hasta la cual se puede hacer uso de los vouchers en el comercio
                      purchase_availability:
                        type: object
                        description: Fechas en las cuales está disponible para registrar compras
                        properties:
                          starting_at:
                            type: string
                            description: Fecha desde la cual está disponible para registrar compras
                          ending_at:
                            type: string
                            description: Fecha hasta la cual está disponible para registrar compras
                      price:
                        type: number
                        description: Costo del voucher
                      stock:
                        type: object
                        description: Información respecto al stock del producto
                        properties:
                          available_stock:
                            type: number
                            description: Cantidad de stock remanente (stock inicial - compras)
                          swaps:
                            type: number
                            description: Initial stock
                          purchases_count:
                            type: number
                            description: Cantidad de compras o canjes asociados
        vouchers:
          type: array
          description: Listado de vouchers
          items:
            type: object
            properties:
              state:
                type: string
                description: Estado
                enum:
                  - sold
                  - validated
                  - redeemed
              code:
                type: string
                description: Código de seguridad
              validated_at:
                type: string
                description: Fecha y hora de validación (state = validated)
              experience_name:
                type: string
                description: Nombre de experiencia
              validity_starting_at:
                type: string
                description: Fecha desde la cual se puede hacer uso del voucher en el comercio
              validity_ending_at:
                type: string
                description: Fecha hasta la cual se puede hacer uso del voucher en el comercio
              eco_name:
                type: string
                description: Nombre del proveedor
              points:
                type: number
                description: Puntos utilizados en la compra del voucher
              amount:
                type: number
                description: Dinero utilizado en al compra del voucher
              price:
                type: number
                description: Costo del voucher
              exchange_id_0:
                type: string
                description: Id de Opción de compra escogida

    cart_checkout_request:
      type: object
      properties:
        rut:
          type: string
          description: Rut de Cliente
        email:
          type: string
          description: >-
            Email del cliente, al cual se le enviarán los vouchers una vez
            confirmado el carro

    cart_creation_request:
      type: object
      properties:
        cart_exchange_attributes:
          type: array
          description: Items del carro
          items:
            type: object
            properties:
              exchange_id_0:
                type: string
                description: Id de Opción de compra escogida
              amount:
                type: string
                description: Cantidad de vouchers del item
    client_gain:
      type: object
      properties:
        client_document_type:
          type: string
          description: Tipo de documento de Cliente
          example: RUT
        client_document_number:
          type: string
          description: Número de documento de Cliente
          example: '145221331'
        points:
          type: integer
          description: Puntos o Cashback acumulados
          example: 1000
        current_date:
          type: string
          format: date
          description: Fecha actual
          example: '2023-01-30'
        billing_day:
          type: integer
          description: Día de facturación
          example: 20
        billing_started_at:
          type: string
          format: date
          description: Inicio de facturación
          example: '2024-01-21'
        billing_ended_at:
          type: string
          format: date
          description: Cierre de facturación
          example: '2024-02-20'
        closure_started_at:
          type: string
          format: date
          description: Inicio de acumulación
          example: '2024-01-17'
        closure_ended_at:
          type: string
          format: date
          description: Cierre de acumulación
          example: '2024-02-16'
        overdue_days:
          type: integer
          description: Días de mora del cliente
          example: 7
        total_points_purchases:
          type: integer
          description: Total monto de compras
          example: 1500
        challenges:
          type: array
          description: Desafíos activos
          items:
            type: object
            properties:
              id:
                type: integer
                description: ID del desafío
                example: 1
              type:
                type: string
                enum:
                  - daily_purchase
                description: Tipo de desafío
              name:
                type: string
                description: Nombre del desafío
                example: Mantención costo 0
              description:
                type: string
                description: Descripción del desafío
                example: Desafío para mantención sin costos
              goal:
                type: integer
                description: Meta para completar el desafío
                example: 10
              completed_at:
                type: string
                format: iso8601
                description: Fecha y hora de cuando se completó el desafío
                example: "2023-12-10T18:15:00Z"
              progress:
                type: integer
                description: Número de progresos realizados hacia el desafío
                example: 3
              conditions:
                type: array
                description: Condiciones del desafío
                items:
                  type: object
                  properties:
                    attribute:
                      type: string
                      description: Atributo a comparar
                      example: "TIPO_TARJETA"
                    type:
                      type: string
                      enum:
                        - "=="
                        - "!="
                        - "in?"
                        - "not_in?"
                        - "between?"
                      description: Tipo de comparación
                    value:
                      type: string
                      description: Valor a comparar
                      example: "ABIERTA"
        purchases:
          type: array
          description: Detalles de las compras
          items:
            type: object
            properties:
              id:
                type: number
                description: ID de compra
                example: 1
              business_category:
                type: string
                description: Categoría del comercio
                example: "Electrónicos"
              commerce:
                type: string
                description: Nombre del comercio
                example: "ElectroStore"
              points:
                type: integer
                description: Puntos obtenidos por la compra
                example: 50
              purchase_datetime:
                type: string
                format: iso8601
                description: Fecha y hora de la compra
                example: "2023-12-10T12:30:00Z"
              total_purchase_price:
                type: number
                description: Precio total de la compra
                example: 1000
    commerce_purchase_request:
      type: object
      properties:
        purchase_id:
          type: string
          description: Id de transacción en sistemas del comercio
          example: '12345-ABC'
          maxLength: 30
        purchase_mode:
          type: string
          description: Tipo de transacción. Presencial = 1, Online = 2
          example: "1"
          enum:
            - 1
            - 2
        client_document_type:
          type: string
          maxLength: 30
          description: 'Tipo de documento del cliente. Para comercios en chile por defecto el valor es RUT. Opciones disponibles para Colombia: CC, CE. Opciones para Perú: DNI, CE.'
          example: 'RUT'
        client_document_number:
          type: string
          maxLength: 18
          description: 'Número de documento del cliente'
          example: "145221331"
        purchase_datetime:
          type: string
          format: iso8601
          description: Fecha y hora de la transacción en el comercio
          example: "2023-08-10T17:15:00Z"
        subtotal_purchase_price:
          type: number
          description: Valor total de productos adquiridos en una misma compra, incluyendo descuentos.
          example: 100.00
        total_purchase_price:
          type: number
          description: Valor total de productos adquiridos en una misma compra, incluyendo descuentos y cupones.
          example: 80.00
        coupon_code:
          type: string
          maxLength: 255
          description: Si incluye cupón de beneficio, indicar el código del cupón.
          example: "SALE2023"
        coupon_amount:
          type: number
          description: Si incluye cupón de beneficio, indicar el monto del cupón.
          example: 20.00
        store_id:
          type: string
          maxLength: 30
          description: Id de tienda del comercio donde se realiza la transacción
          example: '1'
        store_name:
          type: string
          maxLength: 255
          description: Nombre de la tienda en la que se realiza la transacción
          example: 'Nombre Tienda'
        purchase_document_type:
          type: string
          maxLength: 30
          description: 'Tipo de documento con el que se realiza la transacción. Opciones: Boleta, Factura, entre otras.'
          example: 'Boleta'
        purchase_document_number:
          type: string
          maxLength: 255
          description: 'Número del documento con el que se realiza la transacción. Ejemplo: Nº de Boleta.'
          example: "ABC123XYZ"
        cashier_document_type:
          type: string
          maxLength: 30
          description: 'Tipo de documento del vendedor. Para comercios en chile por defecto el valor es RUT. Opciones disponibles para Colombia: CC, CE. Opciones para Perú: DNI, CE.'
          example: 'RUT'
        cashier_document_number:
          type: string
          maxLength: 18
          description: 'Número del documento del vendedor. Para Chile se espera el número de rut.'
          example: "144478347"
        cashier_name:
          type: string
          maxLength: 100
          description: 'Nombre del vendedor'
          example: 'Juan Pérez'
        items:
          type: array
          description: Items
          items:
            type: object
            properties:
              product_name:
                type: string
                description: Nombre del producto comprado por el cliente
                example: 'Producto 1'
              product_sku:
                type: string
                description: 'SKU del producto'
                example: 'SKU123'
              category_name:
                type: string
                description: Categoría del producto
                example: "Electrónica"
              unit_price:
                type: number
                description: 'Precio venta público del producto adquirido.'
                example: 50
              unit_discounted_price:
                type: number
                description: 'Precio venta público con descuento del producto adquirido.'
                example: 50
              units:
                type: number
                description: 'Cantidad de unidades adquiridas del producto.'
                example: 2
              total_product_price:
                type: number
                description: Valor total de unidades adquiridas de un mismo producto, incluyendo descuentos.
                example: 100
    actived_stocks_response:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            description: Id del producto
          sku:
            type: string
            description: Sku del producto
          stock:
            type: object
            description: Información respecto al stock del producto
            properties:
              available_stock:
                type: number
                description: Cantidad de stock remanente (stock inicial - compras)
              swaps:
                type: number
                description: Initial stock
              purchases_count:
                type: number
                description: Cantidad de compras o canjes asociados

    actived_exchanges_response:
      type: array
      items:
        type: object
        properties:
          id_0:
            type: string
            description: Id del producto
          sku:
            type: string
            description: Sku del producto
          exchanges:
            $ref: '#/components/schemas/events_exchanges'

    actived_events_response:
      type: array
      items:
        type: object
        properties:
          id_0:
            type: string
            description: Id del producto
          state:
            type: string
            description: Estado del producto
            enum:
              - published
              - taken
          client_confirm_message:
            type: string
            description: Mensaje que debe aceptar el cliente antes de realizar la compra.
            format: html
          provider:
            type: object
            description: Información respecto al proveedor de la experiencia
            properties:
              fancy_name:
                type: string
                description: Nombre comercial del proveedor
          name:
            type: string
            description:  Nombre del producto
          sku:
            type: string
            description: SKU del producto
          images:
            type: array
            description: Listado de urls de imagenes adicionales e imagen principal del producto
          description:
            type: object
            description: Información respecto al producto
            properties:
              details:
                type: string
                description: Detalles o descripción de la experiencia
                format: html
              addresses:
                type: string
                description: Direcciones de donde se puede hacer uso el voucher
                format: html
              instructions:
                type: string
                description: Instrucciones de uso del voucher
                format: html
              conditions:
                type: string
                description: Condiciones de la experiencia
                format: html
          exchanges:
            $ref: '#/components/schemas/events_exchanges'
          validation_availability:
            type: object
            description: Fechas en las cuales se puede hacer uso de los vouchers en el comercio
            properties:
              validity_starting_at:
                type: string
                description: Fecha desde la cual se puede hacer uso de los vouchers en el comercio
              validity_ending_at:
                type: string
                description: Fecha hasta la cual se puede hacer uso de los vouchers en el comercio
          purchase_availability:
            type: object
            description: Fechas en las cuales está disponible para registrar compras
            properties:
              starting_at:
                type: string
                description: Fecha desde la cual está disponible para registrar compras
              ending_at:
                type: string
                description: Fecha hasta la cual está disponible para registrar compras
          price:
            type: number
            description: Costo del voucher
          stock:
            type: object
            description: Información respecto al stock del producto
            properties:
              available_stock:
                type: number
                description: Cantidad de stock remanente (stock inicial - compras)
              swaps:
                type: number
                description: Initial stock
              purchases_count:
                type: number
                description: Cantidad de compras o canjes asociados


    commerce_purchase_response:
      type: object
      properties:
        status:
          type: string
          example: "created"
    commerce_purchase_item:
      type: object
      properties:
        category_name:
          type: string
        product_name:
          type: string
        total_product_price:
          type: number
        unit_price:
          type: number
        unit_discounted_price:
          type: number
        units:
          type: number
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: jwt
      description: |
        Para ser autorizado para acceder a los endpoints de Puntospoint lo debes hacer enviando el token (Bearer) obtenido en el **login**.
        Para más información, véase https://jwt.io/
tags:
  - name: authentication
  - name: vouchers_cart
    description: Creación de vouchers utilizando un carro de compras. <br /> <br /> <img src="states.png" /> <br /> <br />
  - name: clients
  - name: products
  - name: commerce_purchases

x-tagGroups:
  - name: Authentication
    tags:
      - authentication
  - name: Loyalty Club
    tags:
      - products
      - vouchers_cart
      - clients
  - name: Data Driven
    tags:
      - commerce_purchases
